<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.mapper.WorkMapper">
  <resultMap id="BaseResultMap" type="com.example.demo.entity.Work">
    <id column="workId" jdbcType="INTEGER" property="workid" />
    <result column="useId" jdbcType="INTEGER" property="useid" />
    <result column="companyId" jdbcType="INTEGER" property="companyid" />
    <result column="hrId" jdbcType="INTEGER" property="hrid" />
    <result column="startTime" jdbcType="VARCHAR" property="starttime" />
    <result column="endTime" jdbcType="VARCHAR" property="endtime" />
    <result column="evaluation" jdbcType="VARCHAR" property="evaluation" />
    <result column="isEnd" jdbcType="INTEGER" property="isend" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    workId, useId, companyId, hrId, startTime, endTime, evaluation, isEnd
  </sql>
  <select id="selectByExample" parameterType="com.example.demo.entity.WorkExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from work
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from work
    where workId = #{workid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from work
    where workId = #{workid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.example.demo.entity.WorkExample">
    delete from work
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.example.demo.entity.Work" useGeneratedKeys="true" keyProperty="workid">
    insert into work (workId, useId, companyId, 
      hrId, startTime, endTime, 
      evaluation, isEnd)
    values (#{workid,jdbcType=INTEGER}, #{useid,jdbcType=INTEGER}, #{companyid,jdbcType=INTEGER}, 
      #{hrid,jdbcType=INTEGER}, #{starttime,jdbcType=VARCHAR}, #{endtime,jdbcType=VARCHAR}, 
      #{evaluation,jdbcType=VARCHAR}, #{isend,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.example.demo.entity.Work" useGeneratedKeys="true" keyProperty="workid">
    insert into work
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="workid != null">
        workId,
      </if>
      <if test="useid != null">
        useId,
      </if>
      <if test="companyid != null">
        companyId,
      </if>
      <if test="hrid != null">
        hrId,
      </if>
      <if test="starttime != null">
        startTime,
      </if>
      <if test="endtime != null">
        endTime,
      </if>
      <if test="evaluation != null">
        evaluation,
      </if>
      <if test="isend != null">
        isEnd,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="workid != null">
        #{workid,jdbcType=INTEGER},
      </if>
      <if test="useid != null">
        #{useid,jdbcType=INTEGER},
      </if>
      <if test="companyid != null">
        #{companyid,jdbcType=INTEGER},
      </if>
      <if test="hrid != null">
        #{hrid,jdbcType=INTEGER},
      </if>
      <if test="starttime != null">
        #{starttime,jdbcType=VARCHAR},
      </if>
      <if test="endtime != null">
        #{endtime,jdbcType=VARCHAR},
      </if>
      <if test="evaluation != null">
        #{evaluation,jdbcType=VARCHAR},
      </if>
      <if test="isend != null">
        #{isend,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.demo.entity.WorkExample" resultType="java.lang.Long">
    select count(*) from work
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update work
    <set>
      <if test="record.workid != null">
        workId = #{record.workid,jdbcType=INTEGER},
      </if>
      <if test="record.useid != null">
        useId = #{record.useid,jdbcType=INTEGER},
      </if>
      <if test="record.companyid != null">
        companyId = #{record.companyid,jdbcType=INTEGER},
      </if>
      <if test="record.hrid != null">
        hrId = #{record.hrid,jdbcType=INTEGER},
      </if>
      <if test="record.starttime != null">
        startTime = #{record.starttime,jdbcType=VARCHAR},
      </if>
      <if test="record.endtime != null">
        endTime = #{record.endtime,jdbcType=VARCHAR},
      </if>
      <if test="record.evaluation != null">
        evaluation = #{record.evaluation,jdbcType=VARCHAR},
      </if>
      <if test="record.isend != null">
        isEnd = #{record.isend,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update work
    set workId = #{record.workid,jdbcType=INTEGER},
      useId = #{record.useid,jdbcType=INTEGER},
      companyId = #{record.companyid,jdbcType=INTEGER},
      hrId = #{record.hrid,jdbcType=INTEGER},
      startTime = #{record.starttime,jdbcType=VARCHAR},
      endTime = #{record.endtime,jdbcType=VARCHAR},
      evaluation = #{record.evaluation,jdbcType=VARCHAR},
      isEnd = #{record.isend,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.demo.entity.Work">
    update work
    <set>
      <if test="useid != null">
        useId = #{useid,jdbcType=INTEGER},
      </if>
      <if test="companyid != null">
        companyId = #{companyid,jdbcType=INTEGER},
      </if>
      <if test="hrid != null">
        hrId = #{hrid,jdbcType=INTEGER},
      </if>
      <if test="starttime != null">
        startTime = #{starttime,jdbcType=VARCHAR},
      </if>
      <if test="endtime != null">
        endTime = #{endtime,jdbcType=VARCHAR},
      </if>
      <if test="evaluation != null">
        evaluation = #{evaluation,jdbcType=VARCHAR},
      </if>
      <if test="isend != null">
        isEnd = #{isend,jdbcType=INTEGER},
      </if>
    </set>
    where workId = #{workid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.demo.entity.Work">
    update work
    set useId = #{useid,jdbcType=INTEGER},
      companyId = #{companyid,jdbcType=INTEGER},
      hrId = #{hrid,jdbcType=INTEGER},
      startTime = #{starttime,jdbcType=VARCHAR},
      endTime = #{endtime,jdbcType=VARCHAR},
      evaluation = #{evaluation,jdbcType=VARCHAR},
      isEnd = #{isend,jdbcType=INTEGER}
    where workId = #{workid,jdbcType=INTEGER}
  </update>
</mapper>