<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.mapper.TaskMapper">
  <resultMap id="BaseResultMap" type="com.example.demo.entity.Task">
    <id column="taskId" jdbcType="INTEGER" property="taskid" />
    <result column="achieveId" jdbcType="INTEGER" property="achieveid" />
    <result column="info" jdbcType="VARCHAR" property="info" />
    <result column="score" jdbcType="INTEGER" property="score" />
    <result column="deadLine" jdbcType="VARCHAR" property="deadline" />
    <result column="subLine" jdbcType="VARCHAR" property="subline" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    taskId, achieveId, info, score, deadLine, subLine
  </sql>
  <select id="selectByExample" parameterType="com.example.demo.entity.TaskExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from task
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from task
    where taskId = #{taskid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from task
    where taskId = #{taskid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.example.demo.entity.TaskExample">
    delete from task
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.example.demo.entity.Task" useGeneratedKeys="true" keyProperty="taskid">
    insert into task (taskId, achieveId, info, 
      score, deadLine, subLine
      )
    values (#{taskid,jdbcType=INTEGER}, #{achieveid,jdbcType=INTEGER}, #{info,jdbcType=VARCHAR}, 
      #{score,jdbcType=INTEGER}, #{deadline,jdbcType=VARCHAR}, #{subline,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.example.demo.entity.Task" useGeneratedKeys="true" keyProperty="taskid">
    insert into task
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="taskid != null">
        taskId,
      </if>
      <if test="achieveid != null">
        achieveId,
      </if>
      <if test="info != null">
        info,
      </if>
      <if test="score != null">
        score,
      </if>
      <if test="deadline != null">
        deadLine,
      </if>
      <if test="subline != null">
        subLine,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="taskid != null">
        #{taskid,jdbcType=INTEGER},
      </if>
      <if test="achieveid != null">
        #{achieveid,jdbcType=INTEGER},
      </if>
      <if test="info != null">
        #{info,jdbcType=VARCHAR},
      </if>
      <if test="score != null">
        #{score,jdbcType=INTEGER},
      </if>
      <if test="deadline != null">
        #{deadline,jdbcType=VARCHAR},
      </if>
      <if test="subline != null">
        #{subline,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.demo.entity.TaskExample" resultType="java.lang.Long">
    select count(*) from task
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update task
    <set>
      <if test="record.taskid != null">
        taskId = #{record.taskid,jdbcType=INTEGER},
      </if>
      <if test="record.achieveid != null">
        achieveId = #{record.achieveid,jdbcType=INTEGER},
      </if>
      <if test="record.info != null">
        info = #{record.info,jdbcType=VARCHAR},
      </if>
      <if test="record.score != null">
        score = #{record.score,jdbcType=INTEGER},
      </if>
      <if test="record.deadline != null">
        deadLine = #{record.deadline,jdbcType=VARCHAR},
      </if>
      <if test="record.subline != null">
        subLine = #{record.subline,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update task
    set taskId = #{record.taskid,jdbcType=INTEGER},
      achieveId = #{record.achieveid,jdbcType=INTEGER},
      info = #{record.info,jdbcType=VARCHAR},
      score = #{record.score,jdbcType=INTEGER},
      deadLine = #{record.deadline,jdbcType=VARCHAR},
      subLine = #{record.subline,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.demo.entity.Task">
    update task
    <set>
      <if test="achieveid != null">
        achieveId = #{achieveid,jdbcType=INTEGER},
      </if>
      <if test="info != null">
        info = #{info,jdbcType=VARCHAR},
      </if>
      <if test="score != null">
        score = #{score,jdbcType=INTEGER},
      </if>
      <if test="deadline != null">
        deadLine = #{deadline,jdbcType=VARCHAR},
      </if>
      <if test="subline != null">
        subLine = #{subline,jdbcType=VARCHAR},
      </if>
    </set>
    where taskId = #{taskid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.demo.entity.Task">
    update task
    set achieveId = #{achieveid,jdbcType=INTEGER},
      info = #{info,jdbcType=VARCHAR},
      score = #{score,jdbcType=INTEGER},
      deadLine = #{deadline,jdbcType=VARCHAR},
      subLine = #{subline,jdbcType=VARCHAR}
    where taskId = #{taskid,jdbcType=INTEGER}
  </update>
</mapper>