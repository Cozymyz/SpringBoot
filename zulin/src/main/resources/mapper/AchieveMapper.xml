<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.mapper.AchieveMapper">
  <resultMap id="BaseResultMap" type="com.example.demo.entity.Achieve">
    <id column="achieveId" jdbcType="INTEGER" property="achieveid" />
    <result column="workId" jdbcType="INTEGER" property="workid" />
    <result column="estimate" jdbcType="VARCHAR" property="estimate" />
    <result column="startTime" jdbcType="VARCHAR" property="starttime" />
    <result column="endTime" jdbcType="VARCHAR" property="endtime" />
    <result column="score" jdbcType="INTEGER" property="score" />
    <result column="info" jdbcType="VARCHAR" property="info" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    achieveId, workId, estimate, startTime, endTime, score, info
  </sql>
  <select id="selectByExample" parameterType="com.example.demo.entity.AchieveExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from achieve
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from achieve
    where achieveId = #{achieveid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from achieve
    where achieveId = #{achieveid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.example.demo.entity.AchieveExample">
    delete from achieve
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.example.demo.entity.Achieve" useGeneratedKeys="true" keyProperty="achieveid">
    insert into achieve (achieveId, workId, estimate, 
      startTime, endTime, score, 
      info)
    values (#{achieveid,jdbcType=INTEGER}, #{workid,jdbcType=INTEGER}, #{estimate,jdbcType=VARCHAR}, 
      #{starttime,jdbcType=VARCHAR}, #{endtime,jdbcType=VARCHAR}, #{score,jdbcType=INTEGER}, 
      #{info,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.example.demo.entity.Achieve" useGeneratedKeys="true" keyProperty="achieveid">
    insert into achieve
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="achieveid != null">
        achieveId,
      </if>
      <if test="workid != null">
        workId,
      </if>
      <if test="estimate != null">
        estimate,
      </if>
      <if test="starttime != null">
        startTime,
      </if>
      <if test="endtime != null">
        endTime,
      </if>
      <if test="score != null">
        score,
      </if>
      <if test="info != null">
        info,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="achieveid != null">
        #{achieveid,jdbcType=INTEGER},
      </if>
      <if test="workid != null">
        #{workid,jdbcType=INTEGER},
      </if>
      <if test="estimate != null">
        #{estimate,jdbcType=VARCHAR},
      </if>
      <if test="starttime != null">
        #{starttime,jdbcType=VARCHAR},
      </if>
      <if test="endtime != null">
        #{endtime,jdbcType=VARCHAR},
      </if>
      <if test="score != null">
        #{score,jdbcType=INTEGER},
      </if>
      <if test="info != null">
        #{info,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.demo.entity.AchieveExample" resultType="java.lang.Long">
    select count(*) from achieve
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update achieve
    <set>
      <if test="record.achieveid != null">
        achieveId = #{record.achieveid,jdbcType=INTEGER},
      </if>
      <if test="record.workid != null">
        workId = #{record.workid,jdbcType=INTEGER},
      </if>
      <if test="record.estimate != null">
        estimate = #{record.estimate,jdbcType=VARCHAR},
      </if>
      <if test="record.starttime != null">
        startTime = #{record.starttime,jdbcType=VARCHAR},
      </if>
      <if test="record.endtime != null">
        endTime = #{record.endtime,jdbcType=VARCHAR},
      </if>
      <if test="record.score != null">
        score = #{record.score,jdbcType=INTEGER},
      </if>
      <if test="record.info != null">
        info = #{record.info,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update achieve
    set achieveId = #{record.achieveid,jdbcType=INTEGER},
      workId = #{record.workid,jdbcType=INTEGER},
      estimate = #{record.estimate,jdbcType=VARCHAR},
      startTime = #{record.starttime,jdbcType=VARCHAR},
      endTime = #{record.endtime,jdbcType=VARCHAR},
      score = #{record.score,jdbcType=INTEGER},
      info = #{record.info,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.demo.entity.Achieve">
    update achieve
    <set>
      <if test="workid != null">
        workId = #{workid,jdbcType=INTEGER},
      </if>
      <if test="estimate != null">
        estimate = #{estimate,jdbcType=VARCHAR},
      </if>
      <if test="starttime != null">
        startTime = #{starttime,jdbcType=VARCHAR},
      </if>
      <if test="endtime != null">
        endTime = #{endtime,jdbcType=VARCHAR},
      </if>
      <if test="score != null">
        score = #{score,jdbcType=INTEGER},
      </if>
      <if test="info != null">
        info = #{info,jdbcType=VARCHAR},
      </if>
    </set>
    where achieveId = #{achieveid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.demo.entity.Achieve">
    update achieve
    set workId = #{workid,jdbcType=INTEGER},
      estimate = #{estimate,jdbcType=VARCHAR},
      startTime = #{starttime,jdbcType=VARCHAR},
      endTime = #{endtime,jdbcType=VARCHAR},
      score = #{score,jdbcType=INTEGER},
      info = #{info,jdbcType=VARCHAR}
    where achieveId = #{achieveid,jdbcType=INTEGER}
  </update>
</mapper>