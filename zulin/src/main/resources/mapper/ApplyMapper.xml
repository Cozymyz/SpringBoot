<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.mapper.ApplyMapper">
  <resultMap id="BaseResultMap" type="com.example.demo.entity.Apply">
    <id column="applyId" jdbcType="INTEGER" property="applyid" />
    <result column="userId" jdbcType="INTEGER" property="userid" />
    <result column="companyId" jdbcType="INTEGER" property="companyid" />
    <result column="subTime" jdbcType="VARCHAR" property="subtime" />
    <result column="info" jdbcType="VARCHAR" property="info" />
    <result column="acceptor" jdbcType="INTEGER" property="acceptor" />
    <result column="isAccept" jdbcType="INTEGER" property="isaccept" />
    <result column="applyType" jdbcType="INTEGER" property="applytype" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    applyId, userId, companyId, subTime, info, acceptor, isAccept, applyType
  </sql>
  <select id="selectByExample" parameterType="com.example.demo.entity.ApplyExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from apply
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from apply
    where applyId = #{applyid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from apply
    where applyId = #{applyid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.example.demo.entity.ApplyExample">
    delete from apply
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.example.demo.entity.Apply"  useGeneratedKeys="true" keyProperty="applyid">
    insert into apply (applyId, userId, companyId, 
      subTime, info, acceptor, 
      isAccept, applyType)
    values (#{applyid,jdbcType=INTEGER}, #{userid,jdbcType=INTEGER}, #{companyid,jdbcType=INTEGER}, 
      #{subtime,jdbcType=VARCHAR}, #{info,jdbcType=VARCHAR}, #{acceptor,jdbcType=INTEGER}, 
      #{isaccept,jdbcType=INTEGER}, #{applytype,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.example.demo.entity.Apply"  useGeneratedKeys="true" keyProperty="applyid">
    insert into apply
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="applyid != null">
        applyId,
      </if>
      <if test="userid != null">
        userId,
      </if>
      <if test="companyid != null">
        companyId,
      </if>
      <if test="subtime != null">
        subTime,
      </if>
      <if test="info != null">
        info,
      </if>
      <if test="acceptor != null">
        acceptor,
      </if>
      <if test="isaccept != null">
        isAccept,
      </if>
      <if test="applytype != null">
        applyType,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="applyid != null">
        #{applyid,jdbcType=INTEGER},
      </if>
      <if test="userid != null">
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="companyid != null">
        #{companyid,jdbcType=INTEGER},
      </if>
      <if test="subtime != null">
        #{subtime,jdbcType=VARCHAR},
      </if>
      <if test="info != null">
        #{info,jdbcType=VARCHAR},
      </if>
      <if test="acceptor != null">
        #{acceptor,jdbcType=INTEGER},
      </if>
      <if test="isaccept != null">
        #{isaccept,jdbcType=INTEGER},
      </if>
      <if test="applytype != null">
        #{applytype,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.demo.entity.ApplyExample" resultType="java.lang.Long">
    select count(*) from apply
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update apply
    <set>
      <if test="record.applyid != null">
        applyId = #{record.applyid,jdbcType=INTEGER},
      </if>
      <if test="record.userid != null">
        userId = #{record.userid,jdbcType=INTEGER},
      </if>
      <if test="record.companyid != null">
        companyId = #{record.companyid,jdbcType=INTEGER},
      </if>
      <if test="record.subtime != null">
        subTime = #{record.subtime,jdbcType=VARCHAR},
      </if>
      <if test="record.info != null">
        info = #{record.info,jdbcType=VARCHAR},
      </if>
      <if test="record.acceptor != null">
        acceptor = #{record.acceptor,jdbcType=INTEGER},
      </if>
      <if test="record.isaccept != null">
        isAccept = #{record.isaccept,jdbcType=INTEGER},
      </if>
      <if test="record.applytype != null">
        applyType = #{record.applytype,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update apply
    set applyId = #{record.applyid,jdbcType=INTEGER},
      userId = #{record.userid,jdbcType=INTEGER},
      companyId = #{record.companyid,jdbcType=INTEGER},
      subTime = #{record.subtime,jdbcType=VARCHAR},
      info = #{record.info,jdbcType=VARCHAR},
      acceptor = #{record.acceptor,jdbcType=INTEGER},
      isAccept = #{record.isaccept,jdbcType=INTEGER},
      applyType = #{record.applytype,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.demo.entity.Apply">
    update apply
    <set>
      <if test="userid != null">
        userId = #{userid,jdbcType=INTEGER},
      </if>
      <if test="companyid != null">
        companyId = #{companyid,jdbcType=INTEGER},
      </if>
      <if test="subtime != null">
        subTime = #{subtime,jdbcType=VARCHAR},
      </if>
      <if test="info != null">
        info = #{info,jdbcType=VARCHAR},
      </if>
      <if test="acceptor != null">
        acceptor = #{acceptor,jdbcType=INTEGER},
      </if>
      <if test="isaccept != null">
        isAccept = #{isaccept,jdbcType=INTEGER},
      </if>
      <if test="applytype != null">
        applyType = #{applytype,jdbcType=INTEGER},
      </if>
    </set>
    where applyId = #{applyid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.demo.entity.Apply">
    update apply
    set userId = #{userid,jdbcType=INTEGER},
      companyId = #{companyid,jdbcType=INTEGER},
      subTime = #{subtime,jdbcType=VARCHAR},
      info = #{info,jdbcType=VARCHAR},
      acceptor = #{acceptor,jdbcType=INTEGER},
      isAccept = #{isaccept,jdbcType=INTEGER},
      applyType = #{applytype,jdbcType=INTEGER}
    where applyId = #{applyid,jdbcType=INTEGER}
  </update>
</mapper>