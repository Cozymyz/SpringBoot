<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.mapper.SigninMapper">
  <resultMap id="BaseResultMap" type="com.example.demo.entity.Signin">
    <id column="signinId" jdbcType="INTEGER" property="signinid" />
    <result column="workId" jdbcType="INTEGER" property="workid" />
    <result column="dayTime" jdbcType="VARCHAR" property="daytime" />
    <result column="attend" jdbcType="INTEGER" property="attend" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    signinId, workId, dayTime, attend
  </sql>
  <select id="selectByExample" parameterType="com.example.demo.entity.SigninExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from signin
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from signin
    where signinId = #{signinid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from signin
    where signinId = #{signinid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.example.demo.entity.SigninExample">
    delete from signin
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.example.demo.entity.Signin"  useGeneratedKeys="true" keyProperty="signinid">
    insert into signin (signinId, workId, dayTime, 
      attend)
    values (#{signinid,jdbcType=INTEGER}, #{workid,jdbcType=INTEGER}, #{daytime,jdbcType=VARCHAR}, 
      #{attend,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.example.demo.entity.Signin"  useGeneratedKeys="true" keyProperty="signinid">
    insert into signin
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="signinid != null">
        signinId,
      </if>
      <if test="workid != null">
        workId,
      </if>
      <if test="daytime != null">
        dayTime,
      </if>
      <if test="attend != null">
        attend,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="signinid != null">
        #{signinid,jdbcType=INTEGER},
      </if>
      <if test="workid != null">
        #{workid,jdbcType=INTEGER},
      </if>
      <if test="daytime != null">
        #{daytime,jdbcType=VARCHAR},
      </if>
      <if test="attend != null">
        #{attend,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.demo.entity.SigninExample" resultType="java.lang.Long">
    select count(*) from signin
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update signin
    <set>
      <if test="record.signinid != null">
        signinId = #{record.signinid,jdbcType=INTEGER},
      </if>
      <if test="record.workid != null">
        workId = #{record.workid,jdbcType=INTEGER},
      </if>
      <if test="record.daytime != null">
        dayTime = #{record.daytime,jdbcType=VARCHAR},
      </if>
      <if test="record.attend != null">
        attend = #{record.attend,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update signin
    set signinId = #{record.signinid,jdbcType=INTEGER},
      workId = #{record.workid,jdbcType=INTEGER},
      dayTime = #{record.daytime,jdbcType=VARCHAR},
      attend = #{record.attend,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.demo.entity.Signin">
    update signin
    <set>
      <if test="workid != null">
        workId = #{workid,jdbcType=INTEGER},
      </if>
      <if test="daytime != null">
        dayTime = #{daytime,jdbcType=VARCHAR},
      </if>
      <if test="attend != null">
        attend = #{attend,jdbcType=INTEGER},
      </if>
    </set>
    where signinId = #{signinid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.demo.entity.Signin">
    update signin
    set workId = #{workid,jdbcType=INTEGER},
      dayTime = #{daytime,jdbcType=VARCHAR},
      attend = #{attend,jdbcType=INTEGER}
    where signinId = #{signinid,jdbcType=INTEGER}
  </update>
</mapper>